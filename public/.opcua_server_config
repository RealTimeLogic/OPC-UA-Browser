tracelogger={
  priority=20 -- Filter out lower priority messages
}


users={
  admin = "12345"
}


local key = [[
-----BEGIN PRIVATE KEY-----
MIIEvgIBADANBgkqhkiG9w0BAQEFAASCBKgwggSkAgEAAoIBAQDUN7/2GUSJH3i0
mbzc1Hq5/0wPi2lg9ueuYqm5EX0l0LD8BOEku2cwmSJAmNYb4rZ2aTulRgDTbad6
rPVPtzvHS0mAPPl2ffaCr+NBIj8LBg53AebQj0cuCrkbei0xpeFgYFTor0k6qhW7
YLFDnnMvEAx+v6cHjvXAlZp8A4Z1qK2pFAXGpZRms9NNxqJECRF8JcxoI6SegN6u
ju1GobG6N5EPD2DYWHXTiOYNclDWTgLSfO52uL3wwBEW7Jhy9UxXctL0FVSEjKvJ
Dh+eoPww/kMSbcuJZYAEZypCNHWTiIQyQVzdCQvOxFJnhumRIxzV/5yirr3TLbu4
8tZx1+j/AgMBAAECggEAYVE9hNgafz1A56T2oFgJ/aBu21QFm5MuNGCHT1iPSNeW
ScPdETClRfp7ZB8SVJBXNx7T3NsoxswquM124zr2PVKvnpCXn3htIooRD03qlh4N
ZRKoq6yAqkL9lvWkovdcTotudJPpY28a7yYMtCMF1CeqazdtG8C5vrp8MPGW5/3/
+imZwX0j3KJI/aRWOk77v5WVTJe8cSn79KSxclgsTPtic24YbkgDepjY1Wj1/Pgy
CzcTwslGrRh40hbJF9cfAVYQb8mTniHAcz499HdK3Ou2Hle06m5jQypVG7epOgw+
nK16m2UVIsfGbLX3KoNHKir9LG9Rjsjrr1kSo0sviQKBgQDqQCUTdqmUi3KCyp97
fw+RSGfpPLWCASJSf/EnWZMrmv3fxngiO4WaK4bXDJEFSb8GlhwqV8jXaPRxV59a
p3BLm7NJfYfb6yo8C0KwKa6VcA8IUx9WGNBH1nQUJSAL4esbJjo8KsL1ZGZr3Pmw
IHj8lwl82xBiv2KBCJTtuKyxiQKBgQDn6+l1EK7ERzrYCnTihmyRUIJKi1k0sgFR
23cWVSsww70qlnaYgW8d7Bc9U8E70z2SsmMmwOr0v5IpTU6I2xWp3aDmLhn4W1Oi
sVS7vlh5yjXKB89lSt7YKIS3/weaIE3bqMT4GZjkZNStAFQlNa5gABz+aAT/3CLx
8RO0Ec5MRwKBgQCnX/vd41yZ6eWBNJwtloUeDrlIevtKD9thTU+XCTbR4mXhvaLa
+uKkXNN01uLL/3yBjUJEswKrf6+hSLVxBdCEBZVePlaTuX0s9/LHgpDe7/mdvh7W
2tX/bmj0d+5k7yCY/oB/uyIgSoOwMG0r/pfUC2tZDgGwPQV6IxKepOSn2QKBgQCn
5dUkR8iOFhcWkjNeTvzIEqXQe6NAD+H+tcg35b6X1gzbiQQgkgu0eNe2MS1CN0Jr
MjOvuZgfSZTxy6KgVyMOz4ENQrDQaKVasdBq/nkk6mwYb6EIbrR3fpXecoW5Ycub
y0mVZ0qVhh2lhQhly8AKhep3jyyXYnH1/5ZJFV7pPwKBgEs3JV9snVhadP9yIqYB
u52BmGJk8BHthfKJ66o4wbZkMbIUxsZSmLo/JRbclmeevowzdv5mQTU/Dx1nxpVK
1JrGVVUUTuXA3ppdGC5b9a1lptVJaW+cKEIKWM2oolWWkciQwSEt1pDIbHClBxWc
sTeG8ZTZgNMuiogSIMO1GJFw
-----END PRIVATE KEY-----
]]

local certificate = [[
-----BEGIN CERTIFICATE-----
MIIDnTCCAoWgAwIBAgIUDKdTkWX5RTfPlwYeeG32bW8KDjUwDQYJKoZIhvcNAQEL
BQAwLDESMBAGA1UEAwwJbG9jYWxob3N0MRYwFAYDVQQKDA1SZWFsdGltZUxvZ2lj
MB4XDTIzMDYxODE4MjMxOVoXDTMzMDYxNTE4MjMxOVowLDESMBAGA1UEAwwJbG9j
YWxob3N0MRYwFAYDVQQKDA1SZWFsdGltZUxvZ2ljMIIBIjANBgkqhkiG9w0BAQEF
AAOCAQ8AMIIBCgKCAQEA1De/9hlEiR94tJm83NR6uf9MD4tpYPbnrmKpuRF9JdCw
/AThJLtnMJkiQJjWG+K2dmk7pUYA022neqz1T7c7x0tJgDz5dn32gq/jQSI/CwYO
dwHm0I9HLgq5G3otMaXhYGBU6K9JOqoVu2CxQ55zLxAMfr+nB471wJWafAOGdait
qRQFxqWUZrPTTcaiRAkRfCXMaCOknoDero7tRqGxujeRDw9g2Fh104jmDXJQ1k4C
0nzudri98MARFuyYcvVMV3LS9BVUhIyryQ4fnqD8MP5DEm3LiWWABGcqQjR1k4iE
MkFc3QkLzsRSZ4bpkSMc1f+coq690y27uPLWcdfo/wIDAQABo4G2MIGzMB0GA1Ud
DgQWBBTiiQC+CVe+E0xgZU0OA3Fygc2EBDAfBgNVHSMEGDAWgBTiiQC+CVe+E0xg
ZU0OA3Fygc2EBDAPBgNVHRMBAf8EBTADAQH/MDQGA1UdEQQtMCuCCWxvY2FsaG9z
dIYedXJuOlJlYWxUaW1lTG9naWM6b3BjdWE6c2VydmVyMAsGA1UdDwQEAwID+DAd
BgNVHSUEFjAUBggrBgEFBQcDAQYIKwYBBQUHAwIwDQYJKoZIhvcNAQELBQADggEB
AGKab+pqoREwiOWQ9oRwcClQJg1WaiGLPF3MV36yspNRhv+F7bw2wP9TbjVvTjI4
HQu5V3UUmuBW7xzj4F60R55IplwZh3RAwQMJnsn8LNcBDgGm62aFRi1DU682Nc1d
YvA9V4gqzUEHUHysWYworyZLKfbrJIQpmyw6L9j3JGamdge0RBTRU3z3fb3P+4ed
PEF1Ko4b72Tb4C0VF50N5V74KBrdhBCa1Gv/WF1vg0tcXY7MjGDxBM6fU5ft7fZw
zAjNdC3bkVjtlgJs6ij6UeOTsz8/HKHAZ4bGfnvenYRoInKJhzau/y6tvf+gOpct
LZ34SQdPZqNjHkPEFpAmGsM=
-----END CERTIFICATE-----
]]

local binaryServer = {
  io = _ENV.app.io,

  -- Application name
  applicationName="RealTimeLogic OPCUA Server",

  -- Application URI should be equal to
  -- URI subject alternative name extention in the certificate
  applicationUri="urn:RealTimeLogic:opcua:server",

  key = key,
  certificate = certificate,

  endpoints = {
    {
      -- endpoint URL will be sent to clients.
      endpointUrl = "opc.tcp://",

      -- The port will server be listen to
      -- optional. Will be taken from endpointUrl if absent.
      listenPort = 4841,

      -- The host name will server be bind to
      -- optional. Will be taken from endpointUrl if absent.
      listenAddress="*",
    },
    {
      endpointUrl = "opc.https://"
    },
    {
      endpointUrl = "https://"
    },
    {
      endpointUrl = "opc.http://"
    },
    {
      endpointUrl = "http://"
    },
  },

  -- Size of buffer is allocated for one chunk.
  -- Minimum size 8192.
  bufSize = 65536,

  securePolicies = {
    { -- #1
      securityPolicyUri = "http://opcfoundation.org/UA/SecurityPolicy#Basic256Sha256",
      securityMode = 3, -- SignAndEncrypt,
    },
  },

  userIdentityTokens = {
    {
      policyId = "anonymous",
      tokenType = 0, -- ua.Types.UserTokenType.Anonymous
      issuedTokenType = nil,
      issuerEndpointUrl = nil,
      securityPolicyUri = nil
    },
    {
      policyId = "username",
      tokenType = 1, -- ua.Types.UserTokenType.UserName
      issuedTokenType = nil,
      issuerEndpointUrl = nil,
      securityPolicyUri = nil,
    },
    {
      policyId = "x509",
      tokenType = 2, -- ua.Types.UserTokenType.Certificate
      issuedTokenType = nil,
      issuerEndpointUrl = nil,
      securityPolicyUri = nil
    }
  },

  logging = {
    socket = {
      dbgOn = false,  -- debug logs of socket
      infOn = true,  -- information logs about sockets
      errOn = true,  -- Errors on sockets
    },
    binary = {
      dbgOn = false,  -- Debugging traces about binary protocol. Print encoded message hex data.
      infOn = false,  -- Information traces about binary protocol
      errOn = true,  -- Errors in binary protocol
    },
    services = {
      dbgOn = false,  -- Debugging traces about UA services work
      infOn = true,  -- Informations traces
      errOn = true,  -- Errors
    }
  }
}

return binaryServer
